// Firebase configuration - disabled for Expo compatibility
// import firebase from '@react-native-firebase/app';
// import '@react-native-firebase/auth';
// import '@react-native-firebase/firestore';
// Storage and Messaging will be imported in later phases
// import '@react-native-firebase/storage';
// import '@react-native-firebase/messaging';

// Mock Firebase objects for Expo compatibility
const mockAuth = () => ({
  signInWithEmailAndPassword: () => Promise.reject(new Error('Firebase not available in Expo')),
  createUserWithEmailAndPassword: () => Promise.reject(new Error('Firebase not available in Expo')),
  signOut: () => Promise.reject(new Error('Firebase not available in Expo')),
  sendPasswordResetEmail: () => Promise.reject(new Error('Firebase not available in Expo')),
  currentUser: null,
  onAuthStateChanged: () => () => {},
});

const mockFirestore = () => ({
  collection: () => ({
    doc: () => ({
      set: () => Promise.reject(new Error('Firebase not available in Expo')),
      get: () => Promise.reject(new Error('Firebase not available in Expo')),
      update: () => Promise.reject(new Error('Firebase not available in Expo')),
      delete: () => Promise.reject(new Error('Firebase not available in Expo')),
    }),
    add: () => Promise.reject(new Error('Firebase not available in Expo')),
    where: () => ({
      get: () => Promise.reject(new Error('Firebase not available in Expo')),
    }),
  }),
  doc: () => ({
    set: () => Promise.reject(new Error('Firebase not available in Expo')),
    get: () => Promise.reject(new Error('Firebase not available in Expo')),
    update: () => Promise.reject(new Error('Firebase not available in Expo')),
    delete: () => Promise.reject(new Error('Firebase not available in Expo')),
  }),
});

// Export mock Firebase services for Expo compatibility
export const auth = mockAuth;
export const firestore = mockFirestore;

const mockApp = {
  name: 'mock-firebase-app',
  options: {},
};

export default mockApp;
